# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Ginger Windows Build

on:
  workflow_dispatch: 

jobs:
  build:

    runs-on: windows-latest
    
    env:
      BUILD_CONFIGURATION: Release
      
    steps:
      - uses: actions/checkout@v3

# ------------------------------------------------------------------------------------------------------
# Install .Net core SDK 6.0.x
# ------------------------------------------------------------------------------------------------------
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.301

# ------------------------------------------------------------------------------------------------------
# Restore Ginger solution NuGet packages
# ------------------------------------------------------------------------------------------------------
#       - name: Restore dependencies
#         run: dotnet restore

# ------------------------------------------------------------------------------------------------------
# Build Ginger Solution
# ------------------------------------------------------------------------------------------------------
#       - name: Build
#         run: dotnet build --no-restore


# ------------------------------------------------------------------------------------------------------
# start Testing 
# ------------------------------------------------------------------------------------------------------
      - name: Testing GingerUtilsTest
        run: dotnet test  Ginger/GingerUtilsTest --configuration Release --logger trx --verbosity=normal

      - name: 'Testing GingerCoreCommonTest'
        run: dotnet test  Ginger/GingerCoreCommonTest --configuration ${BUILD_CONFIGURATION} --logger trx --verbosity=normal

        # for GingerCoreNET we use run setting to limit to have one worker thread due to workspace limitation
      - name: 'Testing GingerCoreNETUnitTest'
        run: dotnet test  Ginger/GingerCoreNETUnitTest --configuration ${BUILD_CONFIGURATION} --logger trx --verbosity=normal

      - name: 'Testing GingerPluginCoreTest'
        run: dotnet test  Ginger/GingerPluginCoreTest --configuration ${BUILD_CONFIGURATION} --logger trx --verbosity=normal

      - name: 'Testing GingerConsoleTest'
        run: dotnet test  Ginger/GingerConsoleTest --configuration ${BUILD_CONFIGURATION} --logger trx --verbosity=normal

      - name: 'Testing GingerAutoPilotTest'
        run: dotnet test  Ginger/GingerAutoPilotTest --configuration ${BUILD_CONFIGURATION} --logger trx --verbosity=normal     

#       - name: Test
#         run: dotnet test --no-build --verbosity normal
        
# ------------------------------------------------------------------------------------------------------
# Publish Test Results
# ------------------------------------------------------------------------------------------------------
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: Ginger Linux UnitTests    # Name of the check run which will be created
          path: "**/*.trx"                # Path to test results
          reporter: dotnet-trx            # Format of test results
          
          
